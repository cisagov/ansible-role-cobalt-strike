---
# tasks file for cobalt_strike

- name: Load var file with package names based on the OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        # Add regex_replace() filters to remove spaces and
        # slashes. This allows the OS family/distribution for Kali,
        # "Kali GNU/Linux", to be easily mapped to a vars file.
        - "{{ ansible_distribution | regex_replace('[ /]', '_') }}_{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution | regex_replace('[ /]', '_') }}.yml"
        - "{{ ansible_os_family | regex_replace('[ /]', '_') }}.yml"
      paths:
        - "{{ role_path }}/vars"

# Check if Cobalt Strike is already installed in the expected place
- name: Check if Cobalt Strike is already installed
  stat:
    path: /opt/cobaltstrike
  register: cobaltstrike_directory

- name: Install and license Cobalt Strike
  block:
    - name: Grab Cobalt Strike tarball and license from S3
      aws_s3:
        bucket: "{{ bucket_name }}"
        object: "{{ item }}"
        dest: "/tmp/{{ item }}"
        mode: get
      become: no
      delegate_to: localhost
      loop:
        - "{{ tarball_object_name }}"
        - "{{ license_object_name }}"

    - name: Copy the Cobalt Strike tarball
      copy:
        src: /tmp/{{ tarball_object_name }}
        dest: /tmp/{{ tarball_object_name }}
        mode: 0644

    - name: Copy the Cobalt Strike license
      copy:
        src: /tmp/{{ license_object_name }}
        dest: /root/.cobaltstrike.license
        mode: 0400

    - name: Delete local copies of Cobalt Strike tarball and license
      file:
        path: "/tmp/{{ item }}"
        state: absent
      become: no
      delegate_to: localhost
      loop:
        - "{{ tarball_object_name }}"
        - "{{ license_object_name }}"

    - name: Extract the Cobalt Strike tarball
      # ansible-lint E208 gives an error if we don't specify the mode,
      # but we definitely don't want to do that here since it will
      # override the permissions on the files in the archive.
      unarchive: # noqa 208
        src: /tmp/{{ tarball_object_name }}
        dest: /opt
        remote_src: yes

    - name: Delete remote copy of Cobalt Strike tarball
      file:
        path: /tmp/{{ tarball_object_name }}
        state: absent

    #
    # Upgrade Cobalt Strike
    #
    # The expect Ansible module requires pexpect.
    #
    - name: Install pexpect
      package:
        name: "{{ pexpect_package_names }}"
    - name: Upgrade Cobalt Strike
      expect:
        chdir: /opt/cobaltstrike
        command: sh ./update
        timeout: 300
        responses:
          continue: "yes"
      async: 300
      poll: 30
  when: not cobaltstrike_directory.stat.exists
