---
- name: Load var file with package names based on the OS type
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}_{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - "{{ role_path }}/vars"

# Check if Cobalt Strike is already installed in the expected place
- name: Check if Cobalt Strike is already installed
  ansible.builtin.stat:
    path: /opt/cobaltstrike
  register: cobaltstrike_directory

- name: Install and license Cobalt Strike
  block:
    - name: Grab Cobalt Strike tarball and license from S3
      amazon.aws.aws_s3:
        bucket: "{{ bucket_name }}"
        object: "{{ item }}"
        dest: "/tmp/{{ item }}"
        mode: get
      become: no
      delegate_to: localhost
      loop:
        - "{{ tarball_object_name }}"
        - "{{ license_object_name }}"

    - name: Copy the Cobalt Strike tarball
      ansible.builtin.copy:
        src: /tmp/{{ tarball_object_name }}
        dest: /tmp/{{ tarball_object_name }}
        mode: 0644

    - name: Copy the Cobalt Strike license
      ansible.builtin.copy:
        src: /tmp/{{ license_object_name }}
        dest: /root/.cobaltstrike.license
        mode: 0400

    - name: Delete local copies of Cobalt Strike tarball and license
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      become: no
      delegate_to: localhost
      loop:
        - "{{ tarball_object_name }}"
        - "{{ license_object_name }}"

    - name: Extract the Cobalt Strike tarball
      ansible.builtin.unarchive:
        src: /tmp/{{ tarball_object_name }}
        dest: /opt
        remote_src: yes

    - name: Delete remote copy of Cobalt Strike tarball
      ansible.builtin.file:
        path: /tmp/{{ tarball_object_name }}
        state: absent

    #
    # Upgrade Cobalt Strike
    #
    # The expect Ansible module requires pexpect.
    #
    # - name: Install pexpect
    #   ansible.builtin.package:
    #     name: "{{ pexpect_package_names }}"
    # - name: Upgrade Cobalt Strike
    #   ansible.builtin.expect:
    #     chdir: /opt/cobaltstrike
    #     command: sh ./update
    #     timeout: 300
    #     responses:
    #       continue: "yes"
    #   async: 300
    #   poll: 30
  when: not cobaltstrike_directory.stat.exists
